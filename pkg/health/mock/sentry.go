// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/flaki-service/pkg/health (interfaces: SentryClient)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// SentryClient is a mock of SentryClient interface
type SentryClient struct {
	ctrl     *gomock.Controller
	recorder *SentryClientMockRecorder
}

// SentryClientMockRecorder is the mock recorder for SentryClient
type SentryClientMockRecorder struct {
	mock *SentryClient
}

// NewSentryClient creates a new mock instance
func NewSentryClient(ctrl *gomock.Controller) *SentryClient {
	mock := &SentryClient{ctrl: ctrl}
	mock.recorder = &SentryClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *SentryClient) EXPECT() *SentryClientMockRecorder {
	return m.recorder
}

// URL mocks base method
func (m *SentryClient) URL() string {
	ret := m.ctrl.Call(m, "URL")
	ret0, _ := ret[0].(string)
	return ret0
}

// URL indicates an expected call of URL
func (mr *SentryClientMockRecorder) URL() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "URL", reflect.TypeOf((*SentryClient)(nil).URL))
}

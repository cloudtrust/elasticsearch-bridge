// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/elasticsearch-bridge/pkg/health (interfaces: ElasticsearchClient)

// Package mock is a generated GoMock package.
package mock

import (
	elasticsearch_bridge "github.com/cloudtrust/elasticsearch-bridge/internal/elasticsearch_bridge"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// ElasticsearchClient is a mock of ElasticsearchClient interface
type ElasticsearchClient struct {
	ctrl     *gomock.Controller
	recorder *ElasticsearchClientMockRecorder
}

// ElasticsearchClientMockRecorder is the mock recorder for ElasticsearchClient
type ElasticsearchClientMockRecorder struct {
	mock *ElasticsearchClient
}

// NewElasticsearchClient creates a new mock instance
func NewElasticsearchClient(ctrl *gomock.Controller) *ElasticsearchClient {
	mock := &ElasticsearchClient{ctrl: ctrl}
	mock.recorder = &ElasticsearchClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *ElasticsearchClient) EXPECT() *ElasticsearchClientMockRecorder {
	return m.recorder
}

// CreateIndex mocks base method
func (m *ElasticsearchClient) CreateIndex(arg0 string) error {
	ret := m.ctrl.Call(m, "CreateIndex", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateIndex indicates an expected call of CreateIndex
func (mr *ElasticsearchClientMockRecorder) CreateIndex(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIndex", reflect.TypeOf((*ElasticsearchClient)(nil).CreateIndex), arg0)
}

// DeleteIndex mocks base method
func (m *ElasticsearchClient) DeleteIndex(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteIndex", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteIndex indicates an expected call of DeleteIndex
func (mr *ElasticsearchClientMockRecorder) DeleteIndex(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteIndex", reflect.TypeOf((*ElasticsearchClient)(nil).DeleteIndex), arg0)
}

// GetIndex mocks base method
func (m *ElasticsearchClient) GetIndex(arg0 string) (elasticsearch_bridge.IndexSettingsRepresentation, error) {
	ret := m.ctrl.Call(m, "GetIndex", arg0)
	ret0, _ := ret[0].(elasticsearch_bridge.IndexSettingsRepresentation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIndex indicates an expected call of GetIndex
func (mr *ElasticsearchClientMockRecorder) GetIndex(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIndex", reflect.TypeOf((*ElasticsearchClient)(nil).GetIndex), arg0)
}

// Health mocks base method
func (m *ElasticsearchClient) Health() (elasticsearch_bridge.HealthRepresentation, error) {
	ret := m.ctrl.Call(m, "Health")
	ret0, _ := ret[0].(elasticsearch_bridge.HealthRepresentation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Health indicates an expected call of Health
func (mr *ElasticsearchClientMockRecorder) Health() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Health", reflect.TypeOf((*ElasticsearchClient)(nil).Health))
}

// ListIndexes mocks base method
func (m *ElasticsearchClient) ListIndexes() ([]elasticsearch_bridge.IndexRepresentation, error) {
	ret := m.ctrl.Call(m, "ListIndexes")
	ret0, _ := ret[0].([]elasticsearch_bridge.IndexRepresentation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListIndexes indicates an expected call of ListIndexes
func (mr *ElasticsearchClientMockRecorder) ListIndexes() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListIndexes", reflect.TypeOf((*ElasticsearchClient)(nil).ListIndexes))
}
